@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  h1,
  .h1 {
    @apply text-4xl font-extrabold;
  }

  h2,
  .h2 {
    @apply text-3xl font-extrabold;
  }

  h3,
  .h3 {
    @apply text-2xl font-bold;
  }

  h4,
  .h4 {
    @apply text-xl font-bold;
  }

  h5,
  .h5 {
    @apply text-lg font-semibold;
  }

  h6,
  .h6 {
    @apply text-base font-semibold;
  }

  h1,
  h2,
  h3,
  h4,
  h5,
  h6 {
    @apply text-balance;
  }

  hr {
    @apply border border-t border-solid w-full;
    border-color: color-mix(in srgb, currentColor, transparent 85%);
  }

  ol {
    @apply list-decimal list-inside;
  }
}

@layer components {
  .focus-accent {
    outline: 2px solid var(--accent-color, var(--accent));
    outline-offset: 2px;
  }

  .accent-focus:is(:focus-visible, :focus-within) {
    @apply focus-accent;
  }

  .avatar {
    @apply object-cover object-center aspect-square rounded-full;
  }

  .ellipsis {
    @apply overflow-hidden whitespace-nowrap overflow-ellipsis;
  }

  .giga-emoji {
    @apply text-6xl;
  }

  .container {
    --max-width: 80rem;

    @apply flex flex-col gap-4 p-6 2xl:p-10 max-w-[--max-width];

    &.article {
      --max-width: 60ch;
    }
  }

  .note {
    @apply text-sm text-[--text-passive];
  }

  .input {
    @apply py-2 px-4 rounded-md bg-[--surface] accent-focus;
  }

  .card-array {
    --cols: 3;
    --gap: theme(spacing.4);
    --ideal-width: calc(100% / var(--cols) - var(--gap));
    --min-width: min(var(--ideal-width), 30ch);
    --max-width: 100%;
    --basis: clamp(var(--min-width), var(--ideal-width), var(--max-width));

    @apply flex flex-wrap gap-[--gap];

    & > * {
      @apply basis-[--basis] flex-grow;
    }
  }

  .submit-group {
    @apply flex flex-wrap items-center justify-end p-6 -mx-6 gap-4 sticky bottom-0;
    @apply backdrop-blur-md bg-[--body-translucent];
  }
}

:root {
  --accent: #8939e6;
  --success: #006229;
  --error: #9a0505;
  --info: #0a4ab8;
  --text: #2f2d28;
  --body: #fffef9;
  --body-translucent: color-mix(in srgb, var(--body), transparent 15%);
  --text-passive: color-mix(in srgb, currentColor, transparent 30%);
  --surface: color-mix(in srgb, currentColor, transparent 95%);
  --surface-pale: color-mix(in srgb, currentColor, transparent 98%);
  --surface-hover: color-mix(in srgb, currentColor, transparent 85%);
  --surface-passive: color-mix(in srgb, currentColor, transparent 90%);

  --sidebar-padding: theme(spacing.4);
  --sidebar-offset: calc(1.4lh + var(--sidebar-padding) * 2);
  --sidebar-width: 15rem;
  --main-content-basis: max(20rem, calc(100% - var(--sidebar-width)));

  @apply md:[--sidebar-offset:0];
  @apply 2xl:[--sidebar-width:20rem] 2xl:[--sidebar-padding:theme(spacing.6)];

  color-scheme: light;
  font-family: "DM Sans", sans-serif;
  color: var(--text);
  background-color: var(--body);
  accent-color: var(--accent);

  @media (prefers-color-scheme: dark) {
    --accent: #b67ff5;
    --success: #2fd374;
    --error: #f98383;
    --info: #91b9fd;
    --text: #f8f8ef;
    --body: #2d2825;
    --surface: color-mix(in srgb, currentColor, transparent 92%);
    --surface-hover: color-mix(in srgb, currentColor, transparent 82%);
    --surface-passive: color-mix(in srgb, currentColor, transparent 80%);

    color-scheme: dark;
  }
}

[disabled] {
  @apply pointer-events-none text-[--text-passive];
}

button {
  @apply py-[0.5em] px-[1.5em] rounded-md backdrop-blur-md;
  @apply accent-focus bg-[--surface] transition-colors duration-100;

  &:hover:not(:disabled) {
    @apply bg-[--surface-hover];
  }

  &:is([type="submit"], [type="button"], [type="reset"]) {
    @apply bg-[--surface];
  }

  &:has(svg) {
    @apply flex items-center justify-center gap-[0.625em];

    & > svg {
      @apply w-[1.25em] h-[1.25em];
    }
  }
}

form:not([method="dialog"]) {
  @apply flex flex-col gap-2;

  & > footer {
    @apply submit-group;
  }
}

body {
  @apply flex flex-col min-h-screen;

  @media (max-width: theme(screens.md)) {
    &:has(#sidebar[data-toggled="true"]) {
      @apply overflow-hidden;
    }
  }
}

a {
  --underline-offset: 0.25em;

  text-underline-offset: var(--underline-offset);
  text-decoration-thickness: max(1px, calc(var(--underline-offset) * 0.25));
}

a:has(button) {
  @apply focus-visible:outline-none;

  &:focus-visible > button {
    @apply focus-accent;
  }
}

input {
  @apply input;

  &[type="checkbox"] {
    @apply w-[1.25em] h-[1.25em] cursor-pointer;
  }

  &[type="checkbox"]:not([class*="flex-shrink"]) {
    @apply flex-shrink-0;
  }

  &:focus-visible {
    @apply outline-[--accent];
  }
}

textarea {
  @apply input;
}

[contenteditable] {
  @apply input;
}

select {
  @apply input;

  &[multiple] {
    @apply h-[auto];

    & > option {
      @apply bg-[--surface] p-2 rounded-md max-w-[20ch] ellipsis;

      & + & {
        @apply mt-3;
      }

      &:checked {
        @apply text-[--accent];
      }
    }
  }
}

fieldset {
  @apply flex flex-col gap-2 min-w-[15rem] p-2 rounded-lg relative isolate;
  @apply border-[1.5px] border-[--surface-passive];

  & > legend {
    @apply text-sm px-2 py-0.5 rounded-md w-fit;
  }
}

main {
  @apply flex flex-col gap-4 h-full flex-1 p-8;

  grid-area: content;

  &.auth {
    @apply items-center text-center;

    & > *:first-child {
      @apply flex-grow-[1] inline-flex flex-col justify-end;
    }

    & > form {
      @apply flex flex-col gap-4 max-w-sm w-full flex-grow-[2];

      & > button[type="submit"] {
        @apply mt-4 self-center;
      }
    }
  }

  &.status {
    @apply items-center text-center max-w-lg mx-auto;

    & > *:first-child {
      @apply flex-grow-[1] inline-flex flex-col justify-end;
    }

    & > *:last-child {
      @apply inline-flex flex-col flex-grow-[2] mt-4;
    }
  }
}

dialog:not(.status) {
  --p: theme(spacing.4);

  @apply top-auto right-0 bottom-0 left-0 m-0 max-w-full w-full min-h-[15rem];
  @apply open:flex target:flex flex-col justify-between gap-4;
  @apply bg-[--body] rounded-tl-xl rounded-tr-xl;

  &::backdrop {
    --color: black;
    --transparency: 80%;

    color: var(--color);
    background-color: color-mix(
      in srgb,
      currentColor,
      transparent var(--transparency)
    );
  }

  @media (prefers-color-scheme: dark) {
    &::backdrop {
      --transparency: 50%;
    }
  }

  & > * {
    @apply p-[var(--p)];
  }

  & > header {
    @apply p-[var(--p)] sticky top-0;
  }

  & > footer {
    @apply p-[var(--p)] sticky bottom-0;
    @apply flex flex-wrap justify-end gap-4;
  }

  @media screen and (min-width: theme(screens.sm)) {
    & {
      @apply top-1/2 right-auto bottom-auto left-1/2 -translate-x-1/2 -translate-y-1/2;
      @apply w-auto min-w-[15rem] min-h-[auto];
      @apply rounded-bl-xl rounded-br-xl;
    }
  }
}
